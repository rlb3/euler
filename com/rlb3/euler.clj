(ns com.rlb3.euler
  (:use clojure.contrib.lazy-seqs))

(defn problem1 [end]
  "If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.

Find the sum of all the multiples of 3 or 5 below 1000."
  (reduce +
          (filter #(or (= (mod % 3) 0) (= (mod % 5) 0))
                  (range 1 end))))

(defn problem2 []
  "Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

Find the sum of all the even-valued terms in the sequence which do not exceed four million."
  (reduce +
          (filter even?
                  (for [x (fibs) :while (< x 4000000)] x))))

(defn problem3 [num cur]
  "The prime factors of 13195 are 5, 7, 13 and 29.

What is the largest prime factor of the number 600851475143 ?"
  (if (= num cur)
    num
    (if (zero? (mod num cur))
      (problem3 (/ num cur) cur)
      (problem3 num (inc cur)))))

(defn problem7 []
  "By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6th prime is 13.

What is the 10001st prime number?"
  (last (take 10001 primes)))

